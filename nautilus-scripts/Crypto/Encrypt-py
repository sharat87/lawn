#!/usr/bin/python
#-*- coding:utf-8 -*-

import os
from tarfile import TarFile
from Crypto.Cipher import Blowfish
from random import randrange

lgf = open('/home/sharat/nautilus-scr.log', 'w')
import sys
sys.stdout = lgf
sys.stderr = lgf

os.chdir(os.getenv('NAUTILUS_SCRIPT_CURRENT_URI')[7:])

infiles = (os.path.relpath(f) for f in os.getenv('NAUTILUS_SCRIPT_SELECTED_FILE_PATHS').splitlines() if f)

tf = tarfile.TarFile('/tmp/enc.tar', 'w')
for f in infiles:
    tf.add(f)

tf.close()

class BlowfishWrapper(object):

    def __init__(self, password):
        self._bf = Blowfish.new(password)

    def encrypt(self, content):
        return self._bf.encrypt(self._pad_file(content))

    def decrypt(self, content):
        return self._depad_file(self._bf.decrypt(content))

    def _pad_file(self, content):
        pad_len = 8 - (len(content) % 8)
        padding = ''.join(chr(randrange(0, 256)) for i in range(pad_len - 1))
        bflag = randrange(6, 248)
        bflag -= bflag % 8 - pad_len
        return content + padding + chr(bflag)

    def _depad_file(self, content):
        pad_len = (ord(content[-1]) % 8) or 8
        return content[:-pad_len]
