#!/bin/zsh

ws_work () {

    session_name=work

    tmux new-session -d -n "daemons" -s "$session_name" \
        "zsh -c '/home/sharat/apps/python-3.2/bin/python3 ~/labs/chrome/power-user/server/main.py'"
    tmux split-window -v "zsh -c 'python ~/dotfiles/mail/offlineimap/offlineimap.py'"
    tmux new-window -a -n "mutt" "zsh -c 'mutt'"
    tmux new-window -a

}

ws_blank () {

    session_name=blank

    tmux new-session -d -s "$session_name"

}

# Choose a workspace from the available ones
choose () {

    local ws="$(dialog --stdout --menu "Select workspace to open (Cancel to quit)" 20 60 18 \
        "work" "Main work workspace" \
        "blank" "Empty workspace" \
        )"

    echo "$ws"

}

# Ensure that a workspace with given name exists
workspace () {

    local ws=$1

    # Check if the session is already available
    if [[ "$(tmux list-sessions | grep -c "^$ws:")" == "0" ]]
    then
        # Setup the session
        ws_$ws "$@"
    fi

}

#Ask the user for a workspace and load it
startup () {

    while true
    do
        local ws=`choose`

        if [ -z "$ws" ]
        then
            break
        else
            workspace $ws
            tmux attach-session -t $ws
        fi

    done

}

# Sub-command dispatcher
main () {

    # Get the session name
    if [[ "$#" == "0" ]]
    then
        echo 'No command given'
        exit 1
    fi
    cmd="$1"

    $cmd "$@"

}

main "$@" 2>&1 >~/.logs/tmux-setup
